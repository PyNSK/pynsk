<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyNSK - Новосибирское Python сообщество</title><link href="http://pynsk.ru/" rel="alternate"></link><link href="http://pynsk.ru/feeds/sintaksis-python-yield-from.atom.xml" rel="self"></link><id>http://pynsk.ru/</id><updated>2015-09-21T18:00:00+06:00</updated><entry><title>Синтаксис Python: yield from</title><link href="http://pynsk.ru/posts/2015/%D1%81%D0%B5%D0%BD%D1%82./21/sintaksis-python-yield-from/" rel="alternate"></link><updated>2015-09-21T18:00:00+06:00</updated><author><name>Alexander Sapronov</name></author><id>tag:pynsk.ru,2015-09-21:posts/2015/сент./21/sintaksis-python-yield-from/</id><summary type="html">&lt;p&gt;Рассмотрим еще одну страшную конструкцию в Python 3.3+ - yield from&lt;/p&gt;
&lt;p&gt;Напомню, генератор это объект который можно про итерировать только однажды. Записывается как:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="c"&gt;# Или так&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Когда у нас один генератор - все хорошо. Используем его как итератор и радуемся. Но не редки ситуации когда есть два генератора:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generator2&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generator3&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;И стоит задача - проитерировать один генератор, потом второй. Но вернуть значения не в виде списка,  в виде генератора.
Здесь на помощь приходит конструкция&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yield from &amp;lt;expr&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;где &lt;code&gt;&amp;lt;expr&amp;gt;&lt;/code&gt; - выражение, вычисление которого даёт нам итерируемый объект, из которого и вычленяется итератор. &lt;/p&gt;
&lt;p&gt;Эту конструкцию можно читать так:
&lt;code&gt;yield (вернуть значение) &amp;lt;стоп мыслей&amp;gt; from (взять значение из) &amp;lt;expr&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Используя &lt;code&gt;yield form&lt;/code&gt; задача решается так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;def generator():
    yield from generator2()
    yield from generator3()
&amp;gt;&amp;gt;&amp;gt; generator()
&amp;lt;generator object generator at 0x7f60d8fb3480&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Почитать:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0380/"&gt;https://www.python.org/dev/peps/pep-0380/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://simeonvisser.com/posts/python-3-using-yield-from-in-generators-part-1.html"&gt;http://simeonvisser.com/posts/python-3-using-yield-from-in-generators-part-1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://habrahabr.ru/post/132554/"&gt;http://habrahabr.ru/post/132554/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="yield from"></category><category term="синтаксис"></category></entry></feed>